// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: app.proto

package com.sid.thermostat.app.protobuf;

/**
 * Protobuf type {@code thermostat.app.Data}
 */
public  final class Data extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:thermostat.app.Data)
    DataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Data.newBuilder() to construct.
  private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Data() {
    serialNo_ = "";
    unit_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Data(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            serialNo_ = s;
            break;
          }
          case 16: {

            deviceTime_ = input.readUInt64();
            break;
          }
          case 29: {

            temperature_ = input.readFloat();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            unit_ = rawValue;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.sid.thermostat.app.protobuf.App.internal_static_thermostat_app_Data_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.sid.thermostat.app.protobuf.App.internal_static_thermostat_app_Data_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.sid.thermostat.app.protobuf.Data.class, com.sid.thermostat.app.protobuf.Data.Builder.class);
  }

  /**
   * Protobuf enum {@code thermostat.app.Data.Unit}
   */
  public enum Unit
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CELCIUS = 0;</code>
     */
    CELCIUS(0),
    /**
     * <code>FAHRENHEIT = 1;</code>
     */
    FAHRENHEIT(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CELCIUS = 0;</code>
     */
    public static final int CELCIUS_VALUE = 0;
    /**
     * <code>FAHRENHEIT = 1;</code>
     */
    public static final int FAHRENHEIT_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Unit valueOf(int value) {
      return forNumber(value);
    }

    public static Unit forNumber(int value) {
      switch (value) {
        case 0: return CELCIUS;
        case 1: return FAHRENHEIT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Unit>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Unit> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Unit>() {
            public Unit findValueByNumber(int number) {
              return Unit.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sid.thermostat.app.protobuf.Data.getDescriptor().getEnumTypes().get(0);
    }

    private static final Unit[] VALUES = values();

    public static Unit valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Unit(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:thermostat.app.Data.Unit)
  }

  public static final int SERIAL_NO_FIELD_NUMBER = 1;
  private volatile java.lang.Object serialNo_;
  /**
   * <code>string serial_no = 1;</code>
   */
  public java.lang.String getSerialNo() {
    java.lang.Object ref = serialNo_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      serialNo_ = s;
      return s;
    }
  }
  /**
   * <code>string serial_no = 1;</code>
   */
  public com.google.protobuf.ByteString
      getSerialNoBytes() {
    java.lang.Object ref = serialNo_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      serialNo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEVICE_TIME_FIELD_NUMBER = 2;
  private long deviceTime_;
  /**
   * <code>uint64 device_time = 2;</code>
   */
  public long getDeviceTime() {
    return deviceTime_;
  }

  public static final int TEMPERATURE_FIELD_NUMBER = 3;
  private float temperature_;
  /**
   * <code>float temperature = 3;</code>
   */
  public float getTemperature() {
    return temperature_;
  }

  public static final int UNIT_FIELD_NUMBER = 4;
  private int unit_;
  /**
   * <code>.thermostat.app.Data.Unit unit = 4;</code>
   */
  public int getUnitValue() {
    return unit_;
  }
  /**
   * <code>.thermostat.app.Data.Unit unit = 4;</code>
   */
  public com.sid.thermostat.app.protobuf.Data.Unit getUnit() {
    @SuppressWarnings("deprecation")
    com.sid.thermostat.app.protobuf.Data.Unit result = com.sid.thermostat.app.protobuf.Data.Unit.valueOf(unit_);
    return result == null ? com.sid.thermostat.app.protobuf.Data.Unit.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getSerialNoBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serialNo_);
    }
    if (deviceTime_ != 0L) {
      output.writeUInt64(2, deviceTime_);
    }
    if (temperature_ != 0F) {
      output.writeFloat(3, temperature_);
    }
    if (unit_ != com.sid.thermostat.app.protobuf.Data.Unit.CELCIUS.getNumber()) {
      output.writeEnum(4, unit_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getSerialNoBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serialNo_);
    }
    if (deviceTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, deviceTime_);
    }
    if (temperature_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, temperature_);
    }
    if (unit_ != com.sid.thermostat.app.protobuf.Data.Unit.CELCIUS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, unit_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.sid.thermostat.app.protobuf.Data)) {
      return super.equals(obj);
    }
    com.sid.thermostat.app.protobuf.Data other = (com.sid.thermostat.app.protobuf.Data) obj;

    if (!getSerialNo()
        .equals(other.getSerialNo())) return false;
    if (getDeviceTime()
        != other.getDeviceTime()) return false;
    if (java.lang.Float.floatToIntBits(getTemperature())
        != java.lang.Float.floatToIntBits(
            other.getTemperature())) return false;
    if (unit_ != other.unit_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SERIAL_NO_FIELD_NUMBER;
    hash = (53 * hash) + getSerialNo().hashCode();
    hash = (37 * hash) + DEVICE_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getDeviceTime());
    hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTemperature());
    hash = (37 * hash) + UNIT_FIELD_NUMBER;
    hash = (53 * hash) + unit_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.sid.thermostat.app.protobuf.Data parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sid.thermostat.app.protobuf.Data parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sid.thermostat.app.protobuf.Data parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sid.thermostat.app.protobuf.Data parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sid.thermostat.app.protobuf.Data parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.sid.thermostat.app.protobuf.Data parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.sid.thermostat.app.protobuf.Data parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.sid.thermostat.app.protobuf.Data parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.sid.thermostat.app.protobuf.Data parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.sid.thermostat.app.protobuf.Data parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.sid.thermostat.app.protobuf.Data parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.sid.thermostat.app.protobuf.Data parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.sid.thermostat.app.protobuf.Data prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code thermostat.app.Data}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:thermostat.app.Data)
      com.sid.thermostat.app.protobuf.DataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sid.thermostat.app.protobuf.App.internal_static_thermostat_app_Data_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sid.thermostat.app.protobuf.App.internal_static_thermostat_app_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sid.thermostat.app.protobuf.Data.class, com.sid.thermostat.app.protobuf.Data.Builder.class);
    }

    // Construct using com.sid.thermostat.app.protobuf.Data.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      serialNo_ = "";

      deviceTime_ = 0L;

      temperature_ = 0F;

      unit_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.sid.thermostat.app.protobuf.App.internal_static_thermostat_app_Data_descriptor;
    }

    @java.lang.Override
    public com.sid.thermostat.app.protobuf.Data getDefaultInstanceForType() {
      return com.sid.thermostat.app.protobuf.Data.getDefaultInstance();
    }

    @java.lang.Override
    public com.sid.thermostat.app.protobuf.Data build() {
      com.sid.thermostat.app.protobuf.Data result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.sid.thermostat.app.protobuf.Data buildPartial() {
      com.sid.thermostat.app.protobuf.Data result = new com.sid.thermostat.app.protobuf.Data(this);
      result.serialNo_ = serialNo_;
      result.deviceTime_ = deviceTime_;
      result.temperature_ = temperature_;
      result.unit_ = unit_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.sid.thermostat.app.protobuf.Data) {
        return mergeFrom((com.sid.thermostat.app.protobuf.Data)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.sid.thermostat.app.protobuf.Data other) {
      if (other == com.sid.thermostat.app.protobuf.Data.getDefaultInstance()) return this;
      if (!other.getSerialNo().isEmpty()) {
        serialNo_ = other.serialNo_;
        onChanged();
      }
      if (other.getDeviceTime() != 0L) {
        setDeviceTime(other.getDeviceTime());
      }
      if (other.getTemperature() != 0F) {
        setTemperature(other.getTemperature());
      }
      if (other.unit_ != 0) {
        setUnitValue(other.getUnitValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.sid.thermostat.app.protobuf.Data parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.sid.thermostat.app.protobuf.Data) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object serialNo_ = "";
    /**
     * <code>string serial_no = 1;</code>
     */
    public java.lang.String getSerialNo() {
      java.lang.Object ref = serialNo_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serialNo_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string serial_no = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSerialNoBytes() {
      java.lang.Object ref = serialNo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string serial_no = 1;</code>
     */
    public Builder setSerialNo(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      serialNo_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string serial_no = 1;</code>
     */
    public Builder clearSerialNo() {
      
      serialNo_ = getDefaultInstance().getSerialNo();
      onChanged();
      return this;
    }
    /**
     * <code>string serial_no = 1;</code>
     */
    public Builder setSerialNoBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      serialNo_ = value;
      onChanged();
      return this;
    }

    private long deviceTime_ ;
    /**
     * <code>uint64 device_time = 2;</code>
     */
    public long getDeviceTime() {
      return deviceTime_;
    }
    /**
     * <code>uint64 device_time = 2;</code>
     */
    public Builder setDeviceTime(long value) {
      
      deviceTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 device_time = 2;</code>
     */
    public Builder clearDeviceTime() {
      
      deviceTime_ = 0L;
      onChanged();
      return this;
    }

    private float temperature_ ;
    /**
     * <code>float temperature = 3;</code>
     */
    public float getTemperature() {
      return temperature_;
    }
    /**
     * <code>float temperature = 3;</code>
     */
    public Builder setTemperature(float value) {
      
      temperature_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float temperature = 3;</code>
     */
    public Builder clearTemperature() {
      
      temperature_ = 0F;
      onChanged();
      return this;
    }

    private int unit_ = 0;
    /**
     * <code>.thermostat.app.Data.Unit unit = 4;</code>
     */
    public int getUnitValue() {
      return unit_;
    }
    /**
     * <code>.thermostat.app.Data.Unit unit = 4;</code>
     */
    public Builder setUnitValue(int value) {
      unit_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.thermostat.app.Data.Unit unit = 4;</code>
     */
    public com.sid.thermostat.app.protobuf.Data.Unit getUnit() {
      @SuppressWarnings("deprecation")
      com.sid.thermostat.app.protobuf.Data.Unit result = com.sid.thermostat.app.protobuf.Data.Unit.valueOf(unit_);
      return result == null ? com.sid.thermostat.app.protobuf.Data.Unit.UNRECOGNIZED : result;
    }
    /**
     * <code>.thermostat.app.Data.Unit unit = 4;</code>
     */
    public Builder setUnit(com.sid.thermostat.app.protobuf.Data.Unit value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      unit_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.thermostat.app.Data.Unit unit = 4;</code>
     */
    public Builder clearUnit() {
      
      unit_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:thermostat.app.Data)
  }

  // @@protoc_insertion_point(class_scope:thermostat.app.Data)
  private static final com.sid.thermostat.app.protobuf.Data DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.sid.thermostat.app.protobuf.Data();
  }

  public static com.sid.thermostat.app.protobuf.Data getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Data>
      PARSER = new com.google.protobuf.AbstractParser<Data>() {
    @java.lang.Override
    public Data parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Data(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Data> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Data> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.sid.thermostat.app.protobuf.Data getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

